{"version":3,"sources":["firebase.js","Components/Header/Header.js","features/appSlice.js","Components/Sidebar/SidebarOption.js","Components/Sidebar/SideBar.js","Components/ChatInput.js","Components/Message.js","Components/Chat.js","Components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","console","log","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptioinChannel","h3","SideBar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessage","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContents","color","fadeIn","className","AppBody","path","exact","store","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8606eafb.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyABxMjn7GAsDEgz8Isk91gF3J_eS-rHMaY\",\r\n  authDomain: \"slack-clone-4cadc.firebaseapp.com\",\r\n  projectId: \"slack-clone-4cadc\",\r\n  storageBucket: \"slack-clone-4cadc.appspot.com\",\r\n  messagingSenderId: \"858089476016\",\r\n  appId: \"1:858089476016:web:df366339a3d94b3d119075\"\r\n};\r\n\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, auth, provider };","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../../firebase';\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const [user] = useAuthState(auth);\r\n    console.log(user);\r\n    return (\r\n        <HeaderContainer>\r\n            <HeaderLeft>\r\n                <HeaderAvatar\r\n                    onClick={() => auth.signOut()}\r\n                    alt={user?.displayName}\r\n                    src={user?.photoURL}\r\n                />\r\n                <AccessTimeIcon />\r\n            </HeaderLeft>\r\n            <HeaderSearch>\r\n                <SearchIcon />\r\n                <input placeholder=\"Search\" />\r\n            </HeaderSearch>\r\n            <HeaderRight>\r\n                <HelpOutlineOutlinedIcon />\r\n            </HeaderRight>\r\n        </HeaderContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header;\r\n\r\nconst HeaderSearch = styled.div`\r\nflex: 0.4;\r\nopacity: 1;\r\nborder-radius: 6px;\r\nbackground-color: #421f44;\r\ntext-align: center;\r\ndisplay: flex;\r\npadding: 0 50px;\r\ncolor: gray;\r\nborder: 1px solid gray;\r\n> input{\r\n    background-color:transparent;\r\n    border: none;\r\n    text-align: center;\r\n    min-width: 30vw;\r\n    outline: 0;\r\n    color: white;\r\n}\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\ndisplay:flex;\r\nposition:fixed;\r\nwidth:100%;\r\nalign-items:center;\r\njustify-content:space-between;\r\npadding: 10px 0;\r\nbackground-color: var(--slack-color);\r\ncolor:white;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\nflex: 0.3;\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-left:20px;\r\n> .MuiSvgIcon-root{\r\n    margin-left:auto;\r\n    margin-right: 30px;\r\n}\r\n`;\r\nconst HeaderRight = styled.div`\r\nflex: 0.3;\r\ndisplay: flex;\r\nalign-items: flex-end;\r\n> .MuiSvgIcon-root{\r\n    margin-left:auto;\r\n    margin-right: 20px;\r\n}\r\n`;\r\nconst HeaderAvatar = styled(Avatar)`\r\ncursor: pointer;\r\n:hover {\r\n    opacity: 0.8;\r\n}\r\n`;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// const initialState = {\r\n//     roomId: null,\r\n//     // status: 'idle',\r\n// };\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        roomId: null,\r\n    },\r\n    reducers: {\r\n        enterRoom: (state, action) => {\r\n            state.roomId = action.payload.roomId;\r\n        },\r\n\r\n    },\r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\n\r\nexport default appSlice.reducer;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components'\r\nimport { enterRoom } from '../../features/appSlice';\r\nimport { db } from '../../firebase'\r\n\r\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\r\n    const dispatch = useDispatch();\r\n    const addChannel = () => {\r\n        const channelName = prompt('Please enter a channel name');\r\n        if (channelName) {\r\n            db.collection(\"rooms\").add({\r\n                name: channelName,\r\n            })\r\n        }\r\n    };\r\n    const selectChannel = () => {\r\n        if (id) {\r\n            dispatch(enterRoom({\r\n                roomId: id,\r\n            }))\r\n        };\r\n\r\n    };\r\n    return (\r\n        <SidebarOptionContainer\r\n            onClick={addChannelOption ? addChannel : selectChannel}\r\n        >\r\n            {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\r\n            {Icon ? (\r\n                <h3>{title}</h3>\r\n            ) : (\r\n                <SidebarOptioinChannel>\r\n                    <span>#</span>{title}\r\n                </SidebarOptioinChannel>\r\n            )}\r\n        </SidebarOptionContainer>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n\r\n\r\nconst SidebarOptionContainer = styled.div`\r\ndisplay: flex;\r\nfont-size:12px;\r\nalign-items: center;\r\npadding-left: 2px;\r\ncursor:pointer;\r\n\r\n:hover{\r\n    opacity:0.9;\r\n    background-color: #340e36;\r\n}\r\n\r\n>h3 {\r\n    font-weight: 500;\r\n}\r\n>h3 >span{\r\n    padding: 15px;\r\n}\r\n`;\r\n\r\nconst SidebarOptioinChannel = styled.h3`\r\npadding: 10px 0;\r\nfont-weight: 300;\r\n\r\n`;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport SidebarOption from './SidebarOption';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useCollection } from 'react-firebase-hooks/firestore'\r\nimport { auth, db } from '../../firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nconst SideBar = () => {\r\n    const [channels, loading, error] = useCollection(db.collection('rooms'));\r\n    const [user] = useAuthState(auth);\r\n\r\n    return (\r\n        <SidebarContainer>\r\n            <SidebarHeader>\r\n                <SidebarInfo>\r\n                    <h2>Slack Comunity</h2>\r\n                    <h3>\r\n\r\n                        <FiberManualRecordIcon\r\n                        />\r\n                        {/* Hiten Dewat */}\r\n                        {user?.displayName}\r\n                    </h3>\r\n                </SidebarInfo>\r\n                <CreateIcon />\r\n            </SidebarHeader>\r\n\r\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\r\n            <SidebarOption Icon={InboxIcon} title=\"Mention & Reaction\" />\r\n            <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\r\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\r\n            <SidebarOption Icon={PeopleIcon} title=\"People & user group\" />\r\n            <SidebarOption Icon={AppsIcon} title=\"Apps\" />\r\n            <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\r\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show Less\" />\r\n            <hr />\r\n\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\r\n            <hr />\r\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channels\" />\r\n            {channels?.docs.map(doc => (\r\n                <SidebarOption key={doc.id}\r\n                    id={doc.id}\r\n                    title={doc.data().name} />\r\n\r\n            ))}\r\n        </SidebarContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n\r\n\r\nconst SidebarContainer = styled.div`\r\ncolor: white;\r\nbackground-color: var(--slack-color);\r\nflex: 0.3;\r\nborder-top: 1px solid #49274b;\r\nmax-width:260px;\r\nmargin-top:60px;\r\n\r\n\r\n> hr{\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #49274b\r\n}\r\n`;\r\nconst SidebarHeader = styled.div`\r\ndisplay: flex;\r\nborder-bottom: 1px solid #49274b;\r\npadding-bottom: 10px;\r\npadding: 13px;\r\n\r\n> .MuiSvgIcon-root{\r\n    padding: 8px;\r\n    color: #49274b;\r\n    font-size: 18px;\r\n    background-color: white;\r\n    border-radius: 999px;\r\n\r\n}\r\n`;\r\nconst SidebarInfo = styled.div`\r\nflex: 1;\r\n>h2{\r\n    font-size: 15px;\r\n    font-weight: 900;\r\n    margin-bottom: 5px;\r\n}\r\n>h3{\r\n    display: flex;\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    align-items: center;\r\n}\r\n>h3 > .MuiSvgIcon-root{\r\n    font-size:14px;\r\n    margin-top: 1px;\r\n    margin-right: 2px;\r\n    color: green;\r\n}\r\n`;","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@material-ui/core';\r\nimport { auth, db } from '../firebase';\r\nimport firebase from 'firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nfunction ChatInput({ channelName, channelId, chatRef }) {\r\n    // const inputRef = useRef(null);\r\n    const [input, setInput] = useState(\"\");\r\n    const [user] = useAuthState(auth);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(channelId);\r\n        if (!channelId) {\r\n            return false;\r\n        }\r\n        db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user.displayName,\r\n            userImage: user.photoURL,\r\n        });\r\n        chatRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n        });\r\n        setInput(\"\");\r\n    };\r\n    return (\r\n        <ChatInputContainer>\r\n            <form>\r\n                <input value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder={`Message #${channelName}`} />\r\n                <Button hidden type='submit' onClick={sendMessage}>\r\n                    SEND\r\n                </Button>\r\n            </form>\r\n        </ChatInputContainer>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n\r\nconst ChatInputContainer = styled.div`\r\nborder-radius: 20px;\r\n> form{\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n> form  > input{\r\n    position: fixed;\r\n    bottom:30px;\r\n    width: 60%;\r\n    border: 1px solid gray;\r\n    border-radius:3px;\r\n    padding:20px;\r\n    outline: none;\r\n}\r\n> form  >button{\r\n    display: none !important;\r\n}\r\n`;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nfunction Message({ message, timestamp, user, userImage }) {\r\n    return (\r\n        <MessageContainer>\r\n            <img src={userImage} alt=\"user\" />\r\n            <MessageInfo>\r\n                <h4>\r\n                    {user}\r\n                    <span>{new Date(timestamp?.toDate()).toUTCString()}</span>\r\n                </h4>\r\n                <p>{message}</p>\r\n            </MessageInfo>\r\n        </MessageContainer>\r\n    )\r\n}\r\n\r\nexport default Message\r\n\r\nconst MessageContainer = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\npadding: 20px;\r\n> img{\r\n    height: 50px;\r\n    border-radius: 8px;\r\n}\r\n`;\r\n\r\nconst MessageInfo = styled.div`\r\npadding-left: 10px;\r\n\r\n>h4 > span{\r\n color:gray ;\r\n font-weight:300;\r\n margin-left: 4px;\r\n font-size: 10px;\r\n}\r\n`;","import React, { useEffect, useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { useSelector } from 'react-redux';\r\nimport ChatInput from './ChatInput';\r\nimport { selectRoomId } from '../features/appSlice';\r\nimport { useCollection, useDocument } from 'react-firebase-hooks/firestore';\r\nimport { db } from '../firebase';\r\nimport Message from './Message'\r\n\r\nfunction Chat() {\r\n    const chatRef = useRef(null);\r\n    const roomId = useSelector(selectRoomId);\r\n    const [roomDetails] = useDocument(\r\n        roomId && db.collection(\"rooms\").doc(roomId)\r\n    )\r\n    const [roomMessages, loading] = useCollection(\r\n        roomId &&\r\n        db\r\n            .collection(\"rooms\")\r\n            .doc(roomId)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n    );\r\n    useEffect(() => {\r\n        chatRef?.current?.scrollIntoView({\r\n            behavior: \"smooth\",\r\n        });\r\n    }, [roomId, loading])\r\n    // console.log(roomDetails?.data());\r\n    // console.log(roomMessages);\r\n    return (\r\n        <ChatContainer>\r\n            {roomDetails && roomMessages && (\r\n                <>\r\n                    <Header>\r\n                        <HeaderLeft>\r\n                            <h4>\r\n                                <strong>#{roomDetails?.data().name}</strong>\r\n                            </h4>\r\n                            <StarBorderOutlinedIcon />\r\n                        </HeaderLeft>\r\n                        <HeaderRight>\r\n                            <p>\r\n                                <InfoOutlinedIcon />Details\r\n                            </p>\r\n                        </HeaderRight>\r\n                    </Header>\r\n                    <ChatMessage>\r\n                        {roomMessages?.docs.map((doc) => {\r\n                            const { message, timestamp, user, userImage } = doc.data();\r\n                            return (\r\n                                <Message\r\n                                    key={doc.id}\r\n                                    message={message}\r\n                                    timestamp={timestamp}\r\n                                    user={user}\r\n                                    userImage={userImage}\r\n                                />\r\n                            )\r\n\r\n                        })}\r\n                        <ChatBottom ref={chatRef} />\r\n                    </ChatMessage>\r\n                    <ChatInput\r\n                        chatRef={chatRef}\r\n                        channelName={roomDetails?.data().name} channelId={roomId}\r\n                    />\r\n                </>\r\n            )}\r\n\r\n        </ChatContainer>\r\n    )\r\n}\r\n\r\nexport default Chat\r\nconst ChatBottom = styled.div`\r\npadding-bottom: 200px;\r\n`;\r\nconst Header = styled.div`\r\ndisplay:flex;\r\njustify-content:space-between;\r\npadding: 20px;\r\nborder-bottom: 1px solid lightgray;\r\n`;\r\nconst HeaderLeft = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n>h4{\r\n\r\n    display: flex;\r\n    text-transform: lowercase;\r\n    margin-right: 10px;\r\n}\r\n\r\n> h4 > .MuiSvgIcon-root{\r\n    margin-left: 10px;\r\n    font-size: 18px;\r\n\r\n}\r\n\r\n`;\r\nconst HeaderRight = styled.div`\r\n>p{\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n}\r\n> P> .MuiSvgicon{\r\n    margin-right: 5px !important;\r\n    font-size:16px;\r\n}\r\n`;\r\n\r\nconst ChatContainer = styled.div`\r\nflex: 0.7;\r\nflex-grow: 1;\r\noverflow-y: scroll;\r\nmargin-top:60px;\r\n`;\r\n\r\nconst ChatMessage = styled.div`\r\n\r\n`;","import { Button } from '@material-ui/core';\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { provider } from '../firebase';\r\nimport { auth } from '../firebase';\r\n\r\n\r\nfunction Login() {\r\n    const signIn = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithPopup(provider).catch((error) =>\r\n            alert(error.message));\r\n    };\r\n    return (\r\n        <LoginContainer>\r\n            <LoginInnerContainer>\r\n                <img src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\" alt=\"\" />\r\n                <h1>Sign into Slack community</h1>\r\n                <p>Slack.com</p>\r\n                <Button onClick={signIn}>Sign in with Google\r\n                </Button>\r\n\r\n            </LoginInnerContainer>\r\n        </LoginContainer>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\nconst LoginContainer = styled.div`\r\nbackground-color: #f8f8f8;\r\nheight: 100vh;\r\ndisplay: grid;\r\nplace-items: center;\r\n`;\r\nconst LoginInnerContainer = styled.div`\r\npadding: 100px;\r\ntext-align: center;\r\nbackground-color: white;\r\nborder-radius: 10px;\r\nbox-shadow: 0 1px 3px  rgba(0,0,0,0.12),0 1px 2px rgba(0,0,0,0.24);\r\n> img{\r\n    object-fit: contain;\r\n    height: 100px;\r\n    margin-bottom: 40px;\r\n}\r\n> Button{\r\n    margin-top: 50px;\r\n    text-transform: inherit !important; ;\r\n    background-color: #0a8d48 !important;\r\n    color: white;\r\n}\r\n`;","import React from 'react';\n// import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from './Components/Header/Header';\nimport styled from 'styled-components'\nimport SideBar from './Components/Sidebar/SideBar';\nimport Chat from './Components/Chat'\nimport { auth } from './firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport Login from './Components/Login'\nimport Spinner from \"react-spinkit\"\n\nfunction App() {\n  const [user, loading] = useAuthState(auth)\n  if (loading) {\n    return (\n      <AppLoading>\n        <AppLoadingContents>\n          <img src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\" alt=\"\" />\n          <Spinner name=\"ball-spin-fade-loader\"\n            color=\"purple\"\n            fadeIn=\"none\"\n\n          />\n        </AppLoadingContents>\n      </AppLoading>\n    )\n  }\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (<>\n          <Header />\n          <AppBody>\n            <SideBar />\n            <Switch>\n              <Route path=\"/\" exact>\n                <Chat />\n              </Route>\n\n            </Switch>\n          </AppBody>\n        </>)}\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\nconst AppLoading = styled.div`\ndisplay: grid;\nplace-items: center;\nheight: 100vh;\nwidth: 100%;\n\n`;\nconst AppLoadingContents = styled.div`\ntext-align: center;\npadding-bottom: 100px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n> img{\n  height: 100px;\n  padding: 20px;\n  margin-bottom: 40px;\n}\n`;\nconst AppBody = styled.div`\ndisplay: flex;\nheight: 100vh ; \n`;","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from '../features/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}